@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Uceme.Model.Models.Security.ApplicationUser> SignInManager

@{
    string? returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        var returnUrlFromQuery = query["returnUrl"];
        var pattern = @"\/connect\/authorize\/callback\?client_id=Uceme\.UI&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fauthentication%2Flogin-callback&response_type=code&scope=Uceme\.UIAPI%20openid%20profile&state=[a-z,0-9]{32}&code_challenge=[A-Z,a-z,0-9,_,-]{43}&code_challenge_method=[A-Z,0-9]{4}&response_mode=query";
        var m = Regex.Match(returnUrlFromQuery!, pattern, RegexOptions.IgnoreCase);
        if (m.Success)
        {
            returnUrl = returnUrlFromQuery;
        }
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola @User?.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Regístrese</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl">Login</a>
        </li>
    }
</ul>
